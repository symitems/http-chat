{"version":3,"file":"static/js/27.d872a834.chunk.js","mappings":"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","sources":["components/Chat.js"],"sourcesContent":["import '../App.css';\nimport React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport axios from \"axios\";\nimport { useAuth } from '../context/AuthContext';\n\naxios.defaults.withCredentials = true;\n\nexport default function Chat() {\n  const backend_baseurl = process.env.REACT_APP_BACKEND_BASEURL\n  const navigate = useNavigate();\n  const [msgs, setMsgs] = useState([]);\n  const [post, setPost] = useState({});\n  const [timezone, setTimezone] = useState();\n  const inputTextRef = useRef();\n  const inputTimezoneRef = useRef();\n  const tzlist = [\n    { value: \"UTC\", label: \"UTC\" },\n    { value: \"JST\", label: \"JST\" },\n  ];\n\n  const logout = useAuth().logout;\n  const logoutAndNavigateLogin = useCallback(() => {\n    logout();\n    setTimeout(() => {\n      navigate(\"/http-chat/login\");\n    }, 100)\n  }, [logout, navigate]);\n\n\n  const handleText = (event) => {\n    setPost({ text: event.target.value });\n  };\n\n  const handleTimezone = (event) => {\n    setTimezone(event.target.value);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      axios.get(backend_baseurl + \"/messages/\")\n        .then((res) => {\n          console.log(res);\n          setMsgs(res.data);\n        })\n        .catch((error) => {\n          if (error.response.status === 401) {\n            logoutAndNavigateLogin();\n          }\n        }\n        );\n    }, 3000);\n    return () => clearInterval(interval);\n  }, [backend_baseurl, logoutAndNavigateLogin]);\n\n  const clickSubmit = () => {\n    // messageが空欄でなければ送信\n    console.log(post.text);\n    console.log(post.username);\n    if (post.text) {\n      const text = post.text;\n      const _post = { text: text };\n\n      // POST処理\n      axios\n        .post(backend_baseurl + \"/messages/\", _post)\n        .then((res) => {\n          console.log(res);\n          setMsgs(res.data);\n        })\n        .catch((error) => {\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n          console.log(\"Error\", error.message);\n        });\n\n      // clear message textarea\n      inputTextRef.current.value = \"\";\n      setPost({ text: \"\" });\n    }\n  };\n\n  const clickClear = () => {\n    // DELETE処理\n    axios\n      .delete(backend_baseurl + \"/messages/\")\n      .then((res) => {\n        console.log(res);\n        setMsgs(res.data);\n      })\n      .catch((error) => {\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n        console.log(\"Error\", error.message);\n      });\n  };\n\n  const changeTimezone = (strDate) => {\n    switch (timezone) {\n      case \"JST\":\n        strDate = strDate + \"Z\"\n        const parseDate = Date.parse(strDate.replace(/-/g, \"/\").replace(/T/, \" \"));\n        const parsejstdate = parseDate;\n        const jstdate = new Date(parsejstdate);\n        return (\n          [\n            jstdate.getFullYear(),\n            (\"0\" + (jstdate.getMonth() + 1)).slice(-2),\n            (\"0\" + jstdate.getDate()).slice(-2),\n          ].join(\"-\") +\n          \" \" +\n          [\n            (\"0\" + jstdate.getHours()).slice(-2),\n            (\"0\" + jstdate.getMinutes()).slice(-2),\n            (\"0\" + jstdate.getSeconds()).slice(-2),\n          ].join(\":\")\n        );\n      default:\n        return strDate;\n    }\n  };\n\n  return (\n    <div\n      style={{\n        margin: \"auto\",\n        width: \"90%\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          WebkitBoxPack: \"justify\",\n          MozBoxPack: \"justify\",\n          MsFlexPack: \"justify\",\n          WebkitJustifyContent: \"space-between\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <div>\n          <h1>\n            HTTP CHAT{\" \"}\n            <small>\n              <small>by iwsh</small>\n            </small>\n          </h1>\n        </div>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <select\n            style={{ fontSize: \"16px\" }}\n            name=\"timezone\"\n            defaultValue=\"UTC\"\n            ref={inputTimezoneRef}\n            onChange={handleTimezone}\n          >\n            {tzlist.map((tz) => (\n              <option value={tz.value}>{tz.label}</option>\n            ))}\n          </select>\n          <button onClick={logoutAndNavigateLogin}>\n            Logout\n          </button>\n        </div>\n      </div>\n      <hr></hr>\n      <div>\n        <table cellPadding={5}>\n          <tbody>\n            <tr>\n              <td valign=\"middle\">Message:</td>\n              <td>\n                <textarea\n                  style={{ fontSize: \"16px\" }}\n                  ref={inputTextRef}\n                  cols=\"22\"\n                  rows=\"5\"\n                  onChange={handleText}\n                  required\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <button type=\"submit\" onClick={clickSubmit}>\n          <big>Submit</big>\n        </button>\n        <hr></hr>\n      </div>\n      <button type=\"submit\" onClick={clickClear}>\n        <big>Clear All</big>\n      </button>\n      {msgs.map((msg) => {\n        return (\n          <div>\n            <div style={{\n              marginTop: 15,\n            }}>\n              <b>\n                <big>{msg.username}</big>\n              </b>{\" \"}\n              <small> - [ {changeTimezone(msg.created_at)} ]</small>\n            </div>\n            <div\n              style={{\n                backgroundColor: \"#ffffff\",\n                padding: 5,\n                marginLeft: \"1%\",\n                marginTop: 5,\n                marginRight: \"5%\",\n                // maxWidth: '50%',\n                alignSelf: \"flex-end\",\n                borderRadius: 15,\n                display: \"inline-block\",\n                border: \"1.5px solid\",\n                borderColor: \"#b0e0e6\",\n              }}\n            >\n              {msg.text}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"],"names":["Chat","backend_baseurl","process","navigate","useNavigate","useState","msgs","setMsgs","post","setPost","timezone","setTimezone","inputTextRef","useRef","inputTimezoneRef","logout","useAuth","logoutAndNavigateLogin","useCallback","setTimeout","useEffect","interval","setInterval","axios","then","res","console","log","data","catch","error","response","status","clearInterval","changeTimezone","strDate","parseDate","Date","parse","replace","jstdate","getFullYear","getMonth","slice","getDate","join","getHours","getMinutes","getSeconds","style","margin","width","display","WebkitBoxPack","MozBoxPack","MsFlexPack","WebkitJustifyContent","justifyContent","alignItems","fontSize","name","defaultValue","ref","onChange","event","target","value","label","map","tz","onClick","cellPadding","valign","cols","rows","text","required","type","username","_post","headers","message","current","msg","marginTop","created_at","backgroundColor","padding","marginLeft","marginRight","alignSelf","borderRadius","border","borderColor"],"sourceRoot":""}